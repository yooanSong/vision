<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 1. jdbc.properties와 bean 을 연결하기  -->
	<context:property-placeholder location="classpath:*.properties" />

	<!-- 2. jdbc.properties 값을 이용해서 Connection 맺기 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.userid}" />
		<property name="password" value="${jdbc.passwd}" />
	</bean>

	<!-- 3. Mybatis의 SqlSessionFactory 역할의 빈 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:DeptMapper.xml" />
		<property name="typeAliases">
			<list>
				<value>com.entity.DeptDTO</value>
			</list>
		</property>
	</bean>

	<!-- 4. MyBatis의 SqlSession 역할 빈 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
		<!--생성자의 변수명으로 name을 사용했는데 우리가 만든게 아니라 다를 수 있으므로 name을 삭제하는게 좋겠다 -->
	</bean>

	<bean id="dao" class="com.dao.DeptDAO">
		<property name="template" ref="sqlSession" />
	</bean>

	<bean id="deptService" class="com.service.DeptService">
		<property name="dao" ref="dao" />
	</bean>



</beans>
